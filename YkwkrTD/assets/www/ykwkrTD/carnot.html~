<!DOCTYPE html> 
<html>
  <head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>WebText 動いてよくわかる熱力学（カルノーサイクル）</title>
	<script type="text/x-mathjax-config">MathJax.Hub.Config({ tex2jax: { inlineMath: [['$','$'], ["\\(","\\)"]] } });</script>
	<script type="text/javascript" src="../MathJax/MathJax.js?config=TeX-AMS_HTML"></script>
	<link rel="STYLESHEET" href="td.css" type="text/css">
	<link rel="stylesheet" href="jquery.mobile-1.4.4.min.css" />
	<script src="jquery-1.11.1.min.js"></script>
	<script src="jquery.mobile-1.4.4.min.js"></script>
	<script src="rescalescreen.js" type="text/javascript"></script>
	<script src="vector.js" type="text/javascript"></script>
	<script src="yajirushi.js" type="text/javascript"></script>
    <script type="text/javascript">
    $(document).delegate('#carnot','pageinit',function(e) {
		sc=new DragmanScreen("carnotcanvas",14,10,0.7);
		scp=new RescaleScreen("pistoncanvas",14,4,0.7);
		sct=new RescaleScreen("tempcanvas",10,1,0.4);
		sc.setBottom(-0.5);
		sc.setLeft(-1);
		scp.setBottom(-1);
		scp.setLeft(-1);
		sct.setBottom(0);
		sct.setLeft(0);
		sc.gobackOriginalSize();
		scp.gobackOriginalSize();
		sct.gobackOriginalSize();
		yaP=new Yajirushi("rgba(200,200,100,0.9)");
		yaQ=new Yajirushi("rgba(200,200,200,0.9)");
		ct=sc.canvas.getContext("2d");
		ctp=scp.canvas.getContext("2d");
		ctt=sct.canvas.getContext("2d");
		sc.writeContents=function() {
			write_func();
		}
	   write_temp0();
	   point1=new DraggablePoint(7,3,0.4,"rgba(255,0,0,0.5)");
	   point2=new DraggablePoint(6,2,0.4,"rgba(0,0,255,0.5)");
	   point1.setXY=function(xx,yy,x0,y0,x1,y1) {
		 this.x=xx;
		 this.y=Ta/xx;
		 if( this.y > sc.topy ) {
		   this.y=sc.topy;
		   this.x=Ta/this.y;
		 }
		 report();
	   };
	   point2.setXY=function(xx,yy,x0,y0,x1,y1) {
		 this.x=xx;
		 this.y=Tb/xx;
		 if( this.y > sc.topy ) {
		   this.y=sc.topy;
		   this.x=Tb/this.y;
		 }
		 report();
	   };
	   sc.pushDragObjList(point1);
	   sc.pushDragObjList(point2);
	   reset();
	   report();
	   go();
     });
	 function reset() {
	   point1.x=2;
	   point1.y=8;
	   point2.x=10;
	   point2.y=1;
	 }
	 var minT=4;
	 var maxT=25;
	 var N=50;
	 function report() {
	   var V1=point1.x;
	   var P1=point1.y;
	   var T1=Ta;
	   var V2=point2.x;
	   var P2=point2.y;
	   var T2=Tb;
	   //point3は、温度がT2で、断熱過程によりpoint1から到着できる点
	   var V3=V1*Math.pow(T1/ T2, 1.0/ gammamone);
	   var P3=T2/ V3;
	   //point4は、温度がT1で、断熱過程によりpoint2から到着できる点
	   var V4=V2*Math.pow(T2/ T1,1.0/ gammamone);
	   var P4=T1/ V4;
	   // サイクルは1→4→2→3→1と回る。

	   
	   $("#akaondo").html(marume(T1));
	   $("#aoondo").html(marume(T2));
	   var ratio;
	   var tokeimawari;
	   ratio=1-T2/T1;
	   if( V3<V2 ) {
		   tokeimawari=true;
	   } else {
		   tokeimawari=false;
	   }
	   $("#ratio").html(ratio);

	   // 等温操作での熱量の計算は仕事でいいから、RT∫dV/V = RT log(V)
	   var Qin,Qout;
	   Qin=T1*Math.log(V4/V1);
	   Qout=T2*Math.log(V2/V3);
	   $("#Qin").html(marume(Qin));
	   $("#Qout").html(marume(Qout));
	   $("#Work").html(marume(Qin-Qout));
	   
	   
	 }
	 function marume(x) {
	   var xx=100*x;
	   return Math.round(xx)/100;
	 }
	 var gamma=5.0/ 3.0;
	 var gammamone=2.0/ 3.0;

     function write_func() {
	   sc.clearALL();
	   sc.writeCoordinate();
	   point1.write(ct);
	   point2.write(ct);
	   
	   var V1=point1.x;
	   var P1=point1.y;
	   var T1=Ta;
	   var V2=point2.x;
	   var P2=point2.y;
	   var T2=Tb;

	   // T1≧T2は保証されている。

	   ct.strokeStyle="rgba(255,0,50,0.5)";

	   //point3は、温度がT2で、断熱過程によりpoint1から到着できる点
	   var V3=V1*Math.pow(T1/ T2, 1.0/ gammamone);
	   var P3=T2/ V3;
	   //point4は、温度がT1で、断熱過程によりpoint2から到着できる点
	   var V4=V2*Math.pow(T2/ T1,1.0/ gammamone);
	   var P4=T1/ V4;

	   //point1→point4への等温過程
	   var minV=T1/sc.topy;
	   var maxV=sc.rightwx;

	   var stepV41=(V4-V1)/ N;
	   var stepV=(maxV-minV)/ N;
	   ct.strokeStyle=rgb_temp(T1,minT,maxT-minT);

	   ct.beginPath();
	   ct.moveTo(minV,T1/minV);
	   for(i=1; i<=N ; i++ ) {
         ct.lineTo(minV+stepV*i,T1/(minV+stepV*i));
       }
	   ct.stroke();

	   
	   // point4→point2への断熱過程
       ct.strokeStyle="rgba(100,0,100,0.5)";
	   ct.beginPath();
	   ct.moveTo(V4,P4);
	   var stepV24=(V2-V4)/ N;
	   for(i=1; i<=N ; i++ ) {
         ct.lineTo(V4+stepV24*i,P4*Math.pow((V4/ (V4+stepV24*i)),gamma));
       }
	   ct.stroke();
	   if( T1<T2 ) {
		 ct.strokeStyle="rgba(255,0,50,0.5)";
	   } else {
		 ct.strokeStyle="rgba(0,255,255,0.5)";
	   }
	   // point2→point3への等温過程
	   minV=T2/sc.topy;
	   stepV=(maxV-minV)/N;
	   var stepV32=(V3-V2)/ N;
	   ct.strokeStyle=rgb_temp(T2,minT,maxT-minT);
	   ct.beginPath();
	   ct.moveTo(minV,T2/minV);
	   for(i=1; i<=N; i++ ) {
		 ct.lineTo(minV+stepV*i,T2/ (minV+stepV*i));
	   }
	   ct.stroke();
       ct.strokeStyle="rgba(100,0,100,0.5)";
	   ct.beginPath();
	   ct.moveTo(V3,P3);
	   // point3→point1への断熱過程
	   var stepV13=(V1-V3)/ N;
	   for(i=1; i<=N; i++ ) {
         ct.lineTo(V3+stepV13*i,P3*Math.pow((V3/ (V3+stepV13*i)),gamma));
	   }
       ct.stroke();
	   //if( t<=0 ) {
		 //t=N*4+41;
	   if( t>=N*4+40 ) {
		   t=0;
	   }
	   var p,v;
	   if( t<N ) {
		 v=V1+stepV41*t;
		 p=P1*V1/ v;
	   } else if( t<N+10 ) {
		 v=V4;
		 p=P4;
	   } else if( t<N*2+10 ) {
		 v=V4+stepV24*(t-N-10);
		 p=P4*Math.pow((V4/ v),gamma);
	   } else if( t<N*2+20 ) {
		 v=V2;
		 p=P2;
	   } else if( t<N*3+20 ) {
		 v=V2+stepV32*(t-N*2-20);
		 p=P2*V2/ v;
	   } else if( t< N*3+30 ) {
		 v=V3;
		 p=P3;
	   } else if( t< N*4+30){
		 v=V3+stepV13*(t-N*3-30);
		 p=P3*Math.pow((V3/ v),gamma);
	   } else {
		 v=V1;
		 p=P1;
	   }
	   ct.fillStyle="rgb(0,0,0)";
	   ct.beginPath();
	   ct.arc(v,p,0.1,0,2*Math.PI,false);
	   ct.fill();
	   // write_piston(v,p,p*v,P1*V1,P2*V2,V4-V1,V2-V4);
	   write_piston(v,p,p*v,maxT,minT,V1-V4,V4-V2);
     }
	 var yaP,yaQ;
	 function write_piston(v,p,T,tmax,tmin,firstBouchou,secondBouchou) {
	   // tmax > tminとは限らないことに注意。
	   ctp.fillStyle="rgb(255,255,255)";
	   ctp.fillRect(scp.leftwx,scp.bottomy,scp.w,scp.h);
	   ctp.fillStyle="rgb(0,0,0)";
	   ctp.fillRect(0,0,scp.w,2);
	   ctp.fillStyle="rgb(255,255,255)";
	   ctp.fillRect(0.1,0.1,scp.w,1.8);
	   ctp.fillStyle="rgb(50,50,50)";
	   ctp.fillRect(v,0.1,0.3,1.8);
	   var tdiff=tmax-tmin;
	   if( tdiff <0 ) {
		 tdiff = -tdiff;
		 tmin=tmax;
	   }
	   
	   var i;
	   for(i=0; i<4; i++ ) {
		 yaP.setXY(v+0.04,0.5*i+0.25,p*0.5);
		 yaP.setTheta(-0.5*Math.PI);
		 yaP.setL(p*0.25);
		 yaP.draw(ctp);
	   }
	   write_temp(T,tmin,tdiff);
	   ctp.fillStyle=rgb_temp(T,tmin,tdiff);
	   ctp.fillRect(0.1,0.1,v-0.1,1.8);
	   var ofset=0;
	   var firstS,secondS,thirdS,forthS;
	   if( firstBouchou>0 ) {
		 firstS="圧縮";
		 thirdS="膨張";
	   } else {
		 firstS="膨張";
		 thirdS="圧縮";
	   }
	   if( secondBouchou>0 ) {
		 secondS="圧縮";
		 forthS="膨張";
	   } else {
		 secondS="膨張";
		 forthS="圧縮";
	   }
	   if( t<N ) {
		 ofset=0;
		   $("#now").html(
			   "<span class='aka'>等温"+firstS+"</span>→熱浴を取り去る→"+"断熱"+secondS+"→熱浴で包む→等温"+thirdS+"→熱浴を取り去る→断熱"+forthS+"→熱浴で包む→");
	   } else if( t<N+10 ) {
		   ofset = t-N;
		   $("#now").html("等温"+firstS+"→<span class='aka'>熱浴を取り去る</span>→"+"断熱"+secondS+"→熱浴で包む→等温"+thirdS+"→熱浴を取り去る→断熱"+forthS+"→熱浴で包む→");

	   } else if( t<N*2+10 ) {
		 ofset = 10;
		   $("#now").html("等温"+firstS+"→熱浴を取り去る→"+"<span class='aka'>断熱"+secondS+"</span>→熱浴で包む→等温"+thirdS+"→熱浴を取り去る→断熱"+forthS+"→熱浴で包む→");

	   } else if( t<N*2+20 ) {
		 ofset = N*2+20-t;
		   $("#now").html("等温"+firstS+"→熱浴を取り去る→"+"断熱"+secondS+"→<span class='aka'>熱浴で包む</span>→等温"+thirdS+"→熱浴を取り去る→断熱"+forthS+"→熱浴で包む→");

	   } else if( t<N*3+20 ) {
		 ofset=0;
		   $("#now").html("等温"+firstS+"→熱浴を取り去る→"+"断熱"+secondS+"→熱浴で包む→<span class='aka'>等温"+thirdS+"</span>→熱浴を取り去る→断熱"+forthS+"→熱浴で包む→");

	   } else if( t< N*3+30 ) {
		 ofset = t-N*3-20;
		   $("#now").html("等温"+firstS+"→熱浴を取り去る→"+"断熱"+secondS+"→熱浴で包む→等温"+thirdS+"→<span class='aka'>熱浴を取り去る</span>→断熱"+forthS+"→熱浴で包む→");

	   } else if( t< N*4+30 ){
		 ofset=10;
		   $("#now").html("等温"+firstS+"→熱浴を取り去る→"+"断熱"+secondS+"→熱浴で包む→等温"+thirdS+"→熱浴を取り去る→<span class='aka'>断熱"+forthS+"</span>→熱浴で包む→");

	   } else {
		 ofset = 4*N+40-t;
		   $("#now").html("等温"+firstS+"→熱浴を取り去る→"+"断熱"+secondS+"→熱浴で包む→等温"+thirdS+"→熱浴を取り去る→断熱"+forthS+"→<span class='aka'>熱浴で包む→</span>");

	   }
	   ctp.fillStyle=rgb_temp(T,tmin,tdiff);
	   ofset *= 0.1;
	   ctp.beginPath();
	   ctp.moveTo(scp.leftwx,scp.topy);
	   ctp.lineTo(scp.rightwx,scp.topy);
	   ctp.lineTo(scp.rightwx,scp.topy-1+ofset);
	   ctp.lineTo(-ofset,scp.topy-1+ofset);
	   ctp.lineTo(-ofset,scp.bottomy+1-ofset);
	   ctp.lineTo(scp.rightwx,scp.bottomy+1-ofset);
	   ctp.lineTo(scp.rightwx,scp.bottomy);
	   ctp.lineTo(scp.leftwx,scp.bottomy);
	   ctp.closePath();
	   ctp.fill();
	   if( t< N) {
		 writeQ(firstBouchou,p,v);
	   } else if( t<N*3+20 && t> N*2+20 ) {
		 writeQ(-firstBouchou,p,v);
	   }
	 }
	 function writeQ(firstBouchou,p,v) {
	   var xx;
	   if( firstBouchou>0 ) {
		 xx=0.125*p+0.05;
		 yaQ.setTheta(0.5*Math.PI);	
	   } else {
		 xx=-0.125*p+0.05;
		 yaQ.setTheta(-0.5*Math.PI);
	   }
	   yaQ.setL(0.25*p);
	   yaQ.setXY(xx,1);
	   yaQ.draw(ctp);
	   var x1;
	   x1=v/ 3;
	   if( firstBouchou>0 ) {
		 yaQ.setTheta(Math.PI);
	   } else {
		 yaQ.setTheta(0);
	   }
	   yaQ.setXY(x1,xx);
	   yaQ.draw(ctp);
	   x1 *= 2;
	   yaQ.setXY(x1,xx);
	   yaQ.draw(ctp);
	   x1= v/ 3;
		 if( firstBouchou>0 ) {
			 yaQ.setTheta(0);
		 } else {
			 yaQ.setTheta(Math.PI);
		 }
	   yaQ.setXY(x1,2-xx);
	   yaQ.draw(ctp);
	   x1 *= 2;
	   yaQ.setXY(x1,2-xx);
	   yaQ.draw(ctp);
	   x1= v/ 3;
	 }
	 function rgb_temp(T,tmin,tdiff) {
	   var r=Math.ceil((T-tmin)/ tdiff*255);
	   var b=255-r;
	   var g=Math.ceil(b*0.8+50);
	   return "rgb("+r+","+g+","+b+")";
	 }
	 function write_temp0() {
	   var i;
	   var step=sct.w/ N;
	   for(i=0; i<N; i++ ) {
		 ctt.fillStyle=rgb_temp(i,0,N);
		 ctt.beginPath();
		 ctt.moveTo(i*step,1);
		 ctt.lineTo(i*step,0.5);
		 ctt.lineTo((i+1.1)*step,0.5);
		 ctt.lineTo((i+1.1)*step,1);
		 ctt.closePath();
		 ctt.fill();
	   }
	 }
	 function write_temp(T,tmin,tdiff) {
	   ctt.fillStyle="rgb(200,200,200)";
	   ctt.fillRect(0,0,sct.w,0.5);
	   var x;
	   x=((T-tmin)/ tdiff);
	   ctt.fillStyle="rgb(0,0,0)";
	   ctt.beginPath();
	   ctt.moveTo(x*sct.w,0.5);
	   ctt.lineTo(x*sct.w+0.3,0);
	   ctt.lineTo(x*sct.w-0.3,0);
	   ctt.closePath();
	   ctt.fill();
	 }
	 var t=0;
	 var stopFlg=false;
     function startstop() {
       if( stopFlg ) {
         stopFlg=false;
         go();
       } else {
         stopFlg=true;
       }
     }
     function go() {
       if( stopFlg ) {
         return;
       } else {
         write_func();
         t++;
         setTimeout("go();",200);
       }
     }
	 var Ta=16;
	 var Tb=10;
	 function changeTA() {
	   var t=Number($('#Ta').val());
	   if( t<Tb ) {
		 Ta=Tb;
	   } else {
		 Ta=t;
	   }
	   var Pa=Ta/point1.x;
	   if( Pa > sc.topy ) {
		 Pa=sc.topy;
		 point1.y=Pa;
		 point1.x=Ta/Pa;
	   } else {
		 point1.y=Pa;
	   }
	   if( t != Ta ) {
		 $('#Ta').val(Ta);
		 $('#Ta').slider('refresh');
	   }
	   report();
	 }
	 function changeTB() {
	   var t=Number($('#Tb').val());
	   if( t>Ta ) {
		 Tb=Ta;
	   } else {
		 Tb=t;
	   }
	   var Pb=Tb/point2.x;
	   if( Pb > sc.topy ) {
		 Pb=sc.topy;
		 point2.y=Pb;
		 point2.x=Tb/Pb;
	   } else {
		 point2.y=Pb;
	   }
	   if( t != Tb ) {
		 $('#Tb').val(Tb);
		 $('#Tb').slider('refresh');
	   }
	   report();
	 }
    </script>
  </head> 
  <body>
	<div data-role="page" id="carnotint">
	  <div data-role="header">
		<h2>カルノーサイクル</h2>
	  </div>
	  <div data-role="content">
		  <p>　等温操作と断熱操作を組み合わせて以下のような運動をさせる（アニメーションが次のページにある）。</p>
		  <p><img src="pvzu2.png" width="40%" class="floatnone"></p>
		  <p>　これは何をやりたいかというと、一周して元の状態に戻す間にこの気体に仕事をさせたい。図のように動くと、膨張しているときは収縮しているときに比べて圧力が高いから、全体としてプラスの仕事をしていることになる。エネルギー収支の式$\Delta U=Q-W$を考えると、一周回って元に戻るから$\Delta U=0$となり、このとき$Q=W$である。</p>
		  <p>　断熱操作では熱の出入りがない。図で温度$T$の等温操作（A→B）で入ってくる熱を$Q_{\rm in}$、温度$T'$の等温操作（C→D）で出ていく熱を$Q_{\rm out}$とすると、全体で熱は$Q_{\rm in}-Q_{\rm out}$入ってきたことになり、これが仕事になるから、$Q_{\rm in}-Q_{\rm out}=W$である。ガソリンで動く車のエンジンであれば、$Q_{\rm in}$はガソリンによって生まれる熱量であり、それを（車のラジエータなど）で冷やす過程がC→Dである。</p>
		  <div class="setsumei">ではまず、次のページでカルノーサイクルの動きを見よう。</div>
	  </div>
	  <div data-role="footer" align="center">
		<input type="button" value="目次" data-icon="home" onclick="location.href='./index.html'">　
		<input type="button" value="戻る" data-icon="back" onclick="history.back();">　				
		<input type="button" value="カルノーサイクルのアニメーション" data-icon="arrow-r" onclick="location.href='#carnot'">　
	  </div>
	</div>
	   <div data-role="page" id="carnot">
      <div data-role="header">
        <h2>カルノーサイクルのアニメーション</h2>
      </div>
      <div data-role="content">
        <p><canvas id="carnotcanvas"></canvas></p>
		<p><span id="now"></span></p>
		<p><canvas id="pistoncanvas"></canvas></p>
		<p>温度計→（低温）<canvas id="tempcanvas"></canvas>（高温）</p>
		<p><span class="aka">●</span>の温度：<input type="range" id="Ta" min="4" max="25" value="16" step="0.2" data-inline="true" onchange="changeTA();"></p>
		</p>
		<p><span class="ao">●</span>の温度：<input type="range" id="Tb" min="4" max="25" value="10" step="0.2" data-inline="true" onchange="changeTB();"></p>
		<p>
		  カルノーサイクルの効率＝<span id="ratio"></span>
		</p>
		<p><span class="aka">●</span>の温度での吸熱量Q<sub>1</sub>=<span id="Qin"></span>　<span class="ao">●</span>の温度放熱量Q<sub>2</sub>=<span id="Qout"></span>　仕事量W=<span id="Work"></span></p>
		<hr>
		<div class="setsumei">
		  <p>　物質量Nと気体定数Rは1にして計算してある。</p>
		  <p>　二つの温度は変更できるし、図の赤と青の●はドラッグして動かせるので、サイクルの行程を変化させていろいろ試してみて欲しい。</p>
		  <p>　ただし、温度は4から25の範囲までしか変化しないし、<span class="aka">●</span>の温度は<span class="ao">●</span>の温度より高くないといけない。</p>		  
		</div>
		<div class="box">しばらく遊んで、カルノーサイクルの雰囲気をつかむべし。</div>
		<div class="Q">仕事がマイナスになることがありますが、なぜですか？</div>
		<div class="A">●を動かしていくうちに、サイクルが時計回りではなく反時計回りになると、仕事はマイナスになります。そのときは、膨張するときの方が圧力が低くなっている。</div>
      </div>
	  <div data-role="footer" align="center">
		<a href="#osarai" data-icon="arrow-l">等温操作と断熱操作：もう一度整理</a>
		<input type="button" value="HOME" data-icon="home" onclick="location.href='./index.html'">
		<input type="button" value="戻る" data-icon="back" onclick="history.back();">
		<a href="#carnotth" data-icon="arrow-r">カルノーの定理</a>
      </div>
	</div>
	<div data-role="page" id="carnotth">
		  <div data-role="header">
			  <h1>カルノーの定理</h1>
		  </div>
		  <div data-role="content">
			  <p>　カルノーはこのサイクルをガソリンエンジンのような内燃機関のモデルと考えた。すると$Q_{\rm in}$は言わば「投入する燃料」である。</p>
			  <p><img src="carnot2.png" width="40%" class="floatnone"></p>
			  <p>　同じだけの燃料を使う（同じ$Q_{\rm in}$で考える）ならサイクルがする仕事は大きい方がよく、それは$Q_{\rm out}$が小さい方がいい、ということである。$Q_{\rm out}$はどうやったら小さくできるか、と考えているうちにカルノーはもっとも効率がいい場合であっても、</p>
			  <p>${Q_{\rm out}\over Q_{\rm in}}={T'\over T}$</p>
			  <p>であること（カルノーの定理）を見つけてしまった。$T>T'$で$T'$は常に正（$PV=NRT$で温度が表現されていることを考えると、これは0にも負にもなりようがない）であるから、$Q_{\rm out}$を0にすることはできない。</p>
			  <p>　この定理は一般的に証明できる（つまり、物体が何かにも依らない）。実は理想気体でなくたっていい。今日のところはとりあえず理想気体と考えてこの量を計算して、実際に${T'\over T}$になることを示そう。</p>
			  <div class="setsumei">ただし、ここで${T'\over T}$という形になるのは、理想気体で$PV=NRT$となるような温度を採用しているからである。一般的に証明されるカルノーの定理では（今日はそこまで進まなかったけど）、${f(T')\over f(T)}$のように温度の関数の比になる、ということまでがわかる。$f(T)=T$となるのは「うまい温度を最初から使っていたから」ということになる。</div>
			  <p>理想気体の場合、温度$T$で等温準静的に体積が$V_0\to V_1$と変化した時の吸収する熱が$NRT\log\left({V_1\over V_0}\right)$だというのはすでに計算してあるので、今の場合に当てはめると$Q_{\rm in}=NRT\log\left({V_1\over V_0}\right)$である。同様に考えると$Q_{\rm out}=NRT'\log\left({V'_1\over V'_0}\right)$となる。</p>
			  <div class="Q">【授業後に出た質問】変化の方向が$V_0\to V_1$でなく$V'_1\to V'_0$と逆になるのだから、分母分子が逆では？？</div>
			  <div class="A">変化の方向が逆なんですが、$Q_{\rm in}$と$Q_{\rm out}$は吸収する熱と放出する熱で、定義で符号が反対です。反対の反対で（つまり二回マイナス符号が出て）、式の形は同じになります。</div>
			  <p>　以上から、</p>
			  <p>${Q_{\rm out}\over Q_{\rm in}}={NRT'\log\left({V'_1\over V'_0}\right)\over NRT\log\left({V_1\over V_0}\right) }={T'\over T}$
			  </p>
			  <p>となる。</p>
			  <p>$\log\left({V'_1\over V'_0}\right)$と$\log\left({V_1\over V_0}\right)$が消えるのは、断熱過程の条件（$T^c V=$一定）から、比${V'_1\over V'_0}$と比${V_1\over V_0}$が等しいことが示せるから。</p>

			  <p>理想的なエンジンは、与えられる熱をすべて仕事にできる（つまり、$Q_{\rm out}=0$）ものだが、それは$T'=0$でないと有り得ない（しかし、$T'$は0にも、負にもならない）。</p>
			  <p>　こうして「効率のエンジンを作ろう」としても「投入した熱の${T'\over T}$倍の部分は常に無駄になる、ということになる。</p>
			  <p>　なお、じゃあ$T'=0$にしよう」というのはダメ。$T'$は摂氏や華氏ではなく、ケルビンで測定する絶対温度である。0Kは達成できない。</p>
			  <div class="setsumei">一般的証明は、次回やろう。</div>

			  <div class="Q">【授業後に出た質問】じゃあ、$T'$をどんどん小さくすれば（冷やせば）いいんですか？</div>
			  <div class="A">理屈はそうなんだけどね。たとえば$T'=4$で$T=400$なら${1\over 100}$しか損しないことになる。でも4Kって液体ヘリウムの温度ぐらいだから、それだとむしろ「冷やす」ために苦労するでしょう。実際のエンジンでは（水や空気で冷やすわけだけど）、$T'$は室温ぐらいです。</div>
			  <div class="Q">その出てきた熱を、もう一個のカルノーサイクルで再利用したらどうですか？？</div>
			  <div class="A">それやると、今度はその「２個めのカルノーサイクル」が熱を放出する相手が必要になって、そいつは$T'$よりも、もっと低温でないといけなくなる。で、上の答えでも述べたように、室温より低い温度は作るのにむしろ余計な手間がかかる。</div>
			  <div class="Q">もう一個のカルノーサイクルを逆回転で使うというわけにはいきませんか？？？</div>
			  <div class="A">それは面白いけど、逆回転ってことはこのサイクルはマイナスの仕事するでしょう。つまり、動かすために外部から仕事が必要になる。それはつまり第１のカルノーサイクルがした正の仕事を打ち消しちゃう。ちょうど「発電機を回すのにモーターを使う」みたいなおかしな話しになる（でも、この考え方は来週使う）。</div>
			  <p>　最後にちょっとデモンストレーション。カルノーの定理からわかることは「サイクルに仕事をさせるのに大事なのは温度差である」ということ。そこで水飲み鳥（平和鳥）にもう一度登場してもらう。</p>
			  <p>　平和鳥が動くのは「濡れたくちばしの温度が下がるから」だった。温度差が大事なので、くちばしを冷やすのではなく胴体部を温めても、この鳥は動く。具体的には</p>
			  <p><img src="dB.jpg" width="40%" class="floatnone"></p>
			  <p>のようにして体温で胴体部を温めると、ちゃんと鳥はお辞儀をするのである。</p>
		  </div>
	  </div>
	  <div data-role="footer" align="center">
		<input type="button" value="（等温操作）" data-icon="arrow-l" onclick="location.href='#isothermal'">　
		<input type="button" value="目次" data-icon="home" onclick="location.href='./index.html'">
		<input type="button" value="戻る" data-icon="back"  onclick="history.back();">
		<input type="button" value="最大仕事と準静的操作（P-Vグラフ付き）" data-icon="arrow-r" onclick="location.href='#withGraph'">      </div>
	</div>
	<div data-role="page" id="withGraph">
	  <div data-role="header">
		<h2>最大仕事と準静的操作（P-Vグラフ付き）</h2>
	  </div>
	  <div data-role="content">
		<p>　最後に、同じピストンの運動を、P（圧力）-V（体積）のグラフを見ながら行ってみよう。</p>
		<div class="A">ただし、ここでグラフにしている圧力Pとは、「気体全体の圧力」ではない（今考えている操作の途中では気体の圧力・温度は一様ではない）。グラフの縦軸であるPは、「ピストンに掛かる圧力」であり、いわば「ピストンに接している部分の気体の圧力」である。ピストンに接していない部分の気体の圧力は、もちろんこれとは違う。準静的ならば全体の状態が一様だから気体全体の圧力とピストンに接している部分の圧力は同じになる（ただし、このプログラムでは準静的な操作は起こせない）。</div>
		<p>　下の図の青い線は、気体全体が常に等温を保った場合のP-Vの線である。等温操作でも断熱操作でも、実際の変化はこのようには起きない。</p>
		<hr>
		<p><canvas id="canvas3"></canvas></p>
		<hr>
		<button data-inline="true" onclick="pistonC.pushPiston +=0.2;" data-icon="arrow-l">ピストンを押す</button>
		<select id="speedC" data-inline="true" onchange='pistonC.setspeed($("#speedC"));'>
		  <option value="0.001" selected="unselected">とっても遅く</option>
		  <option value="0.0025" selected="unselected">遅く</option>
		  <option value="0.005" selected="unselected">中くらい</option>
		  <option value="0.01" selected="selected">速く</option>
		</select>

		<button data-inline="true" onclick="pistonC.pullPiston +=0.2;" data-icon="arrow-r">ピストンを引く</button>
		<fieldset data-role="controlgroup" data-type="horizontal">
		  <label><input type="radio" id="adiabatic" onclick="adiabatic();" name="katei"/>断熱操作</label>
		  <label><input type="radio" id="isothermal" onclick="isothermal();" name="katei" checked/>等温操作</label>
		</fieldset>
		<button id="stop" data-inline="true" onclick="startstopC();">停止／再開</button>
		　<button id="restart" data-inline="true" onclick="pistonC.init_blocks(); pistonC.initHistory();">初期状態に戻す。</button></p>
		<hr>
		<div class="setsumei">上の「初期状態に戻す。」ボタンを押すとP-Vグラフの軌跡もクリアされるので、いろんな状況での変化の様子を描いてみよう。</div>
		<p>　たとえば等温操作でピストンを引き、しばらく待ってから戻した時のグラフが、</p>
		<p><img src="iso1.png" width="30%" class="floatnone"></p>
		<p>である。仕事はこの水色の線の下の面積だから、行き→と帰り←を比べると帰りの方が仕事の絶対値は大きい（ただし、収縮しているから気体のする仕事は負である）。</p>
		<p>　こうして、等温操作で元に戻ってくる操作をすると気体がマイナスの仕事をしそうだ、ということがわかる。</p>
		<p>　このように現実的な気体では（といっても、ここで見せているシミュレーションはまだまだ実在気体に比べれば簡単化されたモデルにすぎないのだが）、状態方程式から予想されるような変化は起きない。状態が「平衡状態」でない変化をするからである。</p>
		<p>　「平衡状態」とは単純に言えば「気体の置かれる状況を変えずに放っておくと最終的に到達する状態」である。平衡状態では、シリンダー内の気体の温度・圧力が全く一様になっている。↑のプログラムで起こっている操作途中の状態は、ほぼすべて平衡状態ではない。</p>
		<p>　変化が十分ゆっくりなら、「平衡状態」を保ったままで状態変化を行うことができると考えよう。そのような変化を「準静的操作」と呼ぶことにする。</p>
		<div class="setsumei">　変化がゆっくりの場合の気体のP-Vグラフはより、「等温の線」（青色）に近づくことになる。実際にプログラムでピストンの移動速度を遅くしてからやってみよう。</div>
		<p>　等温操作でピストンを引く場合に気体のする仕事を見ると、なるべく温度が下がらないように、ゆっくりと引くとよい（それが準静的操作）。そして十分にゆっくりと引いたときに、仕事は$NRT\int {\mathrm dV\over V}$と計算した仕事に一致する。この仕事を「最大仕事」と呼ぶことにしよう。現実的に（準静的でなく）ピストンを引くときは、最大仕事よりも小さい仕事になってしまう。つまり準静的にゆっくりと引く時が気体から得られるエネルギーが最大である。</p>
		<div class="Q">　武道で打撃を加える時なんかだと、速い方がエネルギーが伝わる気がしますが。</div>
		<div class="A">　それは打撃を加えるときは「拳の運動エネルギー」にまず変換して、その後相手にぶつけて衝撃を与える、ということをやっているからじゃないかな。拳はほぼ剛体みたいに力を伝えてくれるからね。気体とはだいぶ違う。</div>

		<p>　前にも述べたように、押す時に気体にされる仕事は、今度は$NRT\int {\mathrm dV\over V}$で計算される仕事より、絶対値が大きくなる。よって等温操作で元に戻る操作をすると、どうやっても気体は負の仕事をする。もし気体に正の仕事をさせることができるなら、気体が元の状態に戻っているのにエネルギーを仕事の形で取り出せたことになり、エネルギー問題なんて解決である（そうはいかないから困っている）。</p>
		<p>　こうして「状態変化を一周させると気体が負の仕事をする」というがは、エネルギー保存則とは別の、もう一つの新しい物理法則として熱力学に登場してくることになるのである（熱力学第２法則ということになるのだが、それは今後のお楽しみ）。</p>
		<div class="Q">なんかうまいことやったら気体に正の仕事をさせられないんですか？</div>
		<div class="A">引く時に気体のする仕事は最大仕事より小さく、押す時に気体にされる仕事の絶対値は最大仕事より大きいので、どうやっても無理。</div>
		<p>　また、断熱操作ではどうなるかも試してみよう。この場合もゆっくりな方が「元の状態」に近いところに戻ってくる。断熱操作で元の状態に戻ってこれるときは「この操作は可逆である」と表現するが、可逆になるのはやはり十分にゆっくりと（準静的に）変化させた場合のみである。</p>
		<br>
		<p>　今回は「最大仕事」というキーワードと、最大仕事が実現する理想的な操作として「準静的操作」というものがどういうものなのか、なぜ大事なのかをまず理解して欲しい。それぞれを使ってどのように「等温操作におけるエネルギーにあたるものを定義するのか」ということをこれから先で説明していきたい。</p>
	  </div>
	  <div data-role="footer" align="center">
		<input type="button" value="（断熱操作）" data-icon="arrow-l" onclick="location.href='#adiabatic'">
		<input type="button" value="目次" data-icon="home" onclick="location.href='./index.html'">
		<input type="button" value="戻る" data-icon="back" onclick="history.back();">
      </div>
	</div>
  </body>
</html>
